#pragma once

EXTERN_C_BEGIN

typedef enum DROP_EVENT_TYPE
{
    DROP_EVENT_TYPE_NONE,
    DROP_EVENT_TYPE_CREATED,
    DROP_EVENT_TYPE_RESIZE,
    DROP_EVENT_TYPE_MINIMIZE,
    DROP_EVENT_TYPE_MAXIMIZE,
    DROP_EVENT_TYPE_KEY_DOWN,
    DROP_EVENT_TYPE_KEY_UP,
    DROP_EVENT_TYPE_MOUSE_DOWN,
    DROP_EVENT_TYPE_MOUSE_UP,
    DROP_EVENT_TYPE_MOUSE_SCROLL,
    DROP_EVENT_TYPE_MOUSE_MOVE,
    DROP_EVENT_TYPE_CLOSE,
    DROP_EVENT_TYPE_DESTROY,
    DROP_EVENT_TYPE_QUIT,
    DROP_EVENT_TYPE_COUNT
} DROP_EVENT_TYPE;

typedef enum DROP_KEYCODE
{
    // Special keys.
    DROP_KEYCODE_UNKNOWN = 0,
    DROP_KEYCODE_ESCAPE,
    DROP_KEYCODE_TAB,
    DROP_KEYCODE_CAPSLOCK,
    DROP_KEYCODE_SHIFT_LEFT,
    DROP_KEYCODE_SHIFT_RIGHT,
    DROP_KEYCODE_CTRL_LEFT,
    DROP_KEYCODE_CTRL_RIGHT,
    DROP_KEYCODE_ALT_LEFT,
    DROP_KEYCODE_ALT_RIGHT,
    DROP_KEYCODE_SPACE,
    DROP_KEYCODE_ENTER,
    DROP_KEYCODE_BACKSPACE,
    DROP_KEYCODE_DELETE,
    DROP_KEYCODE_INSERT,
    DROP_KEYCODE_HOME,
    DROP_KEYCODE_END,
    DROP_KEYCODE_PAGE_UP,
    DROP_KEYCODE_PAGE_DOWN,
    DROP_KEYCODE_PRINT_SCREEN,
    DROP_KEYCODE_SCROLL_LOCK,
    DROP_KEYCODE_PAUSE,
    DROP_KEYCODE_MENU,
    DROP_KEYCODE_SUPER_LEFT, // Windows key / Super key.
    DROP_KEYCODE_SUPER_RIGHT,

    // Arrow keys.
    DROP_KEYCODE_ARROW_UP,
    DROP_KEYCODE_ARROW_DOWN,
    DROP_KEYCODE_ARROW_LEFT,
    DROP_KEYCODE_ARROW_RIGHT,

    // Function keys.
    DROP_KEYCODE_F1,
    DROP_KEYCODE_F2,
    DROP_KEYCODE_F3,
    DROP_KEYCODE_F4,
    DROP_KEYCODE_F5,
    DROP_KEYCODE_F6,
    DROP_KEYCODE_F7,
    DROP_KEYCODE_F8,
    DROP_KEYCODE_F9,
    DROP_KEYCODE_F10,
    DROP_KEYCODE_F11,
    DROP_KEYCODE_F12,

    // Number row (0-9).
    DROP_KEYCODE_0,
    DROP_KEYCODE_1,
    DROP_KEYCODE_2,
    DROP_KEYCODE_3,
    DROP_KEYCODE_4,
    DROP_KEYCODE_5,
    DROP_KEYCODE_6,
    DROP_KEYCODE_7,
    DROP_KEYCODE_8,
    DROP_KEYCODE_9,

    // Letters (A-Z).
    DROP_KEYCODE_A,
    DROP_KEYCODE_B,
    DROP_KEYCODE_C,
    DROP_KEYCODE_D,
    DROP_KEYCODE_E,
    DROP_KEYCODE_F,
    DROP_KEYCODE_G,
    DROP_KEYCODE_H,
    DROP_KEYCODE_I,
    DROP_KEYCODE_J,
    DROP_KEYCODE_K,
    DROP_KEYCODE_L,
    DROP_KEYCODE_M,
    DROP_KEYCODE_N,
    DROP_KEYCODE_O,
    DROP_KEYCODE_P,
    DROP_KEYCODE_Q,
    DROP_KEYCODE_R,
    DROP_KEYCODE_S,
    DROP_KEYCODE_T,
    DROP_KEYCODE_U,
    DROP_KEYCODE_V,
    DROP_KEYCODE_W,
    DROP_KEYCODE_X,
    DROP_KEYCODE_Y,
    DROP_KEYCODE_Z,

    // Symbol keys (US QWERTY layout).
    DROP_KEYCODE_GRAVE,         // ` ~
    DROP_KEYCODE_MINUS,         // - _
    DROP_KEYCODE_EQUALS,        // = +
    DROP_KEYCODE_BRACKET_LEFT,  // [ {
    DROP_KEYCODE_BRACKET_RIGHT, // ] }
    DROP_KEYCODE_BACKSLASH,     // \ |
    DROP_KEYCODE_SEMICOLON,     // ; :
    DROP_KEYCODE_APOSTROPHE,    // ' "
    DROP_KEYCODE_COMMA,         // , <
    DROP_KEYCODE_PERIOD,        // . >
    DROP_KEYCODE_SLASH,         // / ?

    // Numpad.
    DROP_KEYCODE_NUMPAD_0,
    DROP_KEYCODE_NUMPAD_1,
    DROP_KEYCODE_NUMPAD_2,
    DROP_KEYCODE_NUMPAD_3,
    DROP_KEYCODE_NUMPAD_4,
    DROP_KEYCODE_NUMPAD_5,
    DROP_KEYCODE_NUMPAD_6,
    DROP_KEYCODE_NUMPAD_7,
    DROP_KEYCODE_NUMPAD_8,
    DROP_KEYCODE_NUMPAD_9,
    DROP_KEYCODE_NUMPAD_DECIMAL,
    DROP_KEYCODE_NUMPAD_DIVIDE,
    DROP_KEYCODE_NUMPAD_MULTIPLY,
    DROP_KEYCODE_NUMPAD_SUBTRACT,
    DROP_KEYCODE_NUMPAD_ADD,
    DROP_KEYCODE_NUMPAD_ENTER,
    DROP_KEYCODE_NUM_LOCK,

    DROP_KEYCODE_COUNT // Total count of keycodes.
} DROP_KEYCODE;

typedef struct Drop_Point
{
    i32 x;
    i32 y;
} Drop_Point;

typedef struct Drop_Key
{
    char key;
} Drop_Key;

typedef struct Drop_WndRect
{
    Drop_Point pos;
    Drop_Point size;
} Drop_WndRect;

typedef struct _Event
{
    DROP_EVENT_TYPE type;

    union
    {
        Drop_Point   mousePos;
        Drop_Key     key;
        Drop_WndRect wndRect;
        i32          wheelDelta;
    };
} _Event;

typedef struct _DROP_Event* DROP_Event;

EXTERN_C_END
